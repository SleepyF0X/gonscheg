using System.Text;
using Gonscheg.Shared;
using WeatherAPI_CSharp;

namespace Gonscheg.Helpers;

public class WeatherClient
{
    private readonly APIClient _weatherClient = new(EnvironmentVariables.WeatherAPIKey);
    public async Task<string> GetFutureDayWeatherAsync(DateTime now, string city)
    {
        var forecast = await _weatherClient.GetWeatherForecastHourlyAsync(city);
        var sb = new StringBuilder();
        sb.AppendLine("–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è (–Ω–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ): ");
        foreach (var hourly in forecast)
        {
            if (hourly.Date.Hour < now.Hour || hourly.Date.Hour > 23)
            {
                continue;
            }
            var icon = hourly.ChanceOfRain > 50 ? "üåß" :
                hourly.ChanceOfRain > 20 ? "üå¶" :
                hourly.TemperatureCelsius < 19 ? "‚òÅÔ∏è" :
                hourly.TemperatureCelsius < 21 ? "üå•" :
                hourly.TemperatureCelsius < 22.5 ? "üå§" : "‚òÄÔ∏è";

            sb.AppendLine($"{hourly.Date.Hour} ‚Äî {icon} {hourly.TemperatureCelsius:F1}¬∞C, üíß‚Äî {hourly.ChanceOfRain}%");
        }

        return sb.ToString();
    }
}